/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'application'
    id 'eclipse'
    id 'maven'
    id 'org.scoverage'
    id 'scala'
}

ext.dockerImageName = 'controller'
apply from: '../../gradle/docker.gradle'
distDocker.dependsOn ':common:scala:distDocker', 'distTar'

project.archivesBaseName = "openwhisk-controller"

ext.coverageDirs = [
    "${buildDir}/classes/scala/scoverage",
    "${project(':common:scala').buildDir.absolutePath}/classes/scala/scoverage"
]
distDockerCoverage.dependsOn ':common:scala:scoverageClasses', 'scoverageClasses'

dependencies {
    implementation "org.scala-lang:scala-library:${gradle.scala.version}"
    implementation project(':common:scala')
    implementation project(':core:invoker')
    implementation project(':core:scheduler')
    implementation "org.apache.commons:commons-lang3:3.3.2"
    implementation "com.typesafe.akka:akka-stream-kafka-testkit_${gradle.scala.depVersion}:${gradle.akka_kafka.version}"
    implementation "com.typesafe.akka:akka-stream-testkit_${gradle.scala.depVersion}:${gradle.akka.version}"
    implementation "com.typesafe.akka:akka-http-testkit_${gradle.scala.depVersion}:${gradle.akka_http.version}"
    implementation "com.typesafe.akka:akka-testkit_${gradle.scala.depVersion}:${gradle.akka.version}"
    implementation "com.lightbend.akka.management:akka-management-cluster-bootstrap_${gradle.scala.depVersion}:${gradle.akka_management.version}"
    implementation "com.lightbend.akka.discovery:akka-discovery-kubernetes-api_${gradle.scala.depVersion}:${gradle.akka_management.version}"
    implementation "com.lightbend.akka.discovery:akka-discovery-marathon-api_${gradle.scala.depVersion}:${gradle.akka_management.version}"
    implementation "org.scalatest:scalatest_${gradle.scala.depVersion}:3.0.8"
    //implementation project(':tests')
//////////////////

    implementation "org.scala-lang:scala-library:${gradle.scala.version}"
    implementation "org.apache.commons:commons-lang3:3.3.2"
    implementation "org.apache.httpcomponents:httpclient:4.5.2:tests"
    implementation "org.apache.httpcomponents:httpmime:4.3.6"
    implementation "junit:junit:4.11"
    implementation "io.rest-assured:rest-assured:4.0.0"
    implementation "org.scalatest:scalatest_${gradle.scala.depVersion}:3.0.8"
    implementation "com.typesafe.akka:akka-testkit_${gradle.scala.depVersion}:${gradle.akka.version}"
    implementation "com.google.code.gson:gson:2.3.1"
    implementation "org.scalamock:scalamock_${gradle.scala.depVersion}:4.4.0"
    implementation "com.typesafe.akka:akka-http-testkit_${gradle.scala.depVersion}:${gradle.akka_http.version}"
    implementation "com.github.java-json-tools:json-schema-validator:2.2.8"
    implementation "org.mockito:mockito-core:2.27.0"
    implementation "io.opentracing:opentracing-mock:0.31.0"
    implementation "org.apache.curator:curator-test:${gradle.curator.version}"
    implementation "com.atlassian.oai:swagger-request-validator-core:1.4.5"
    implementation "io.github.embeddedkafka:embedded-kafka_${gradle.scala.depVersion}:2.4.0"
    implementation "com.typesafe.akka:akka-stream-kafka-testkit_${gradle.scala.depVersion}:${gradle.akka_kafka.version}"
    implementation "com.typesafe.akka:akka-stream-testkit_${gradle.scala.depVersion}:${gradle.akka.version}"
    implementation "io.fabric8:kubernetes-server-mock:${gradle.kube_client.version}"
    implementation "org.rogach:scallop_${gradle.scala.depVersion}:3.3.2"
    //fdsa

    implementation "com.amazonaws:aws-java-sdk-s3:1.11.295"
    implementation "com.amazonaws:aws-java-sdk-s3:1.11.295"
    implementation "com.microsoft.azure:azure-cosmos:3.5.0"
    implementation 'org.testcontainers:elasticsearch:1.17.1'
    implementation 'org.testcontainers:mongodb:1.17.1'


    implementation project(':common:scala')
    implementation project(':core:scheduler')
    implementation project(':core:invoker')
    implementation project(':core:cosmosdb:cache-invalidator')
    implementation project(':core:monitoring:user-events')
    implementation project(':tools:admin')


}

mainClassName = "org.apache.openwhisk.core.controller.Controller"
applicationDefaultJvmArgs = ["-Djava.security.egd=file:/dev/./urandom"]
